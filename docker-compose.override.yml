version: '3.4'

services:
  vicuna-infra:
    container_name: vicuna-infra
    build:
      dockerfile: Dockerfile
      context: .
      args:
        - '--no-cache'
    command:
      - 'cp /app/tls/tls.keycloak.crt /usr/local/share/ca-certificates/tls.keycloak.crt'
      - 'chmod 755 /https/*'
      - 'chmod 644 /usr/local/share/ca-certificates/tls.keycloak.crt'
      - 'update-ca-certificates'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
    ports:
      - "80"
      - "7208:443"
    depends_on:
      keycloak:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${HOME}/.aspnet/https:/https
    networks:
      - vicuna-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "keycloak.host.internal:host-gateway"

  postgres:
    image: 'postgres:17'
    hostname: 'pginfra'
    container_name: vicunapostgresql
    environment:
      POSTGRES_DB: vicuna_user
      POSTGRES_USER: vicuna_user
      POSTGRES_PASSWORD: vicuna_pg
    ports:
      - "15432:5432"
    restart: unless-stopped
    networks:
      - vicuna-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U vicuna_user -p 5432" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-kc:
    container_name: vicunapostgresql-kc
    image: 'postgres:17'
    hostname: 'pgkc'
    environment:
      - 'POSTGRES_DB=keycloak'
      - 'POSTGRES_PASSWORD=keycloak'
      - 'POSTGRES_USER=keycloak'
      - 'ADVERTISED_HOST=localhost'
      - 'ADVERTISED_PORT=25432'
    ports:
      - '25432:5432'
    networks:
      - vicuna-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -p 5432" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    container_name: vicuna-kafka
    image: apache/kafka
    hostname: kafka
    env_file:
      - kafka.base.env
    ports:
      - "29092:9092"
    expose:
      - "9092"
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 5s
      timeout: 10s
      retries: 10

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:25.0.6
    environment:
      - 'KC_DB=postgres'
      - 'KC_DB_URL=jdbc:postgresql://vicunapostgresql-kc:5432/keycloak'
      - 'KC_DB_USERNAME=keycloak'
      - 'KC_DB_PASSWORD=keycloak'
      - 'KEYCLOAK_ADMIN=admin'
      - 'KEYCLOAK_ADMIN_PASSWORD=admin'
      - 'ADVERTISED_HOST=keycloak.host.internal'
      - 'ADVERTISED_PORT=28443'
    command:
      - 'start-dev'
      - '--import-realm'
      - '--health-enabled=true'
      - '--https-certificate-key-file=/opt/keycloak/conf/tls/tls.keycloak.key'
      - '--https-certificate-file=/opt/keycloak/conf/tls/tls.keycloak.crt'
    volumes:
      - ./config:/opt/keycloak/data/import/
      - ./tls:/opt/keycloak/conf/tls/
    ports:
      - "28443:8443"
      - "28999:9000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vicuna-net
    extra_hosts:
      - "keycloak.host.internal:host-gateway"
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'" ]
      interval: 8s
      timeout: 5s
      retries: 20

networks:
  vicuna-net:
    name: vicuna-net
    driver: bridge